{"ast":null,"code":"var _jsxFileName = \"/Users/jonayahj/Desktop/Think Halcyon/Clients/Yego Coffee/YC Website 2.0/ycweb/src/components/Sections/Forms/ContactForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// Contact Form to go on the Contact page\nimport { useForm } from \"react-hook-form\";\nexport default function ContactForm(style) {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  return __jsx(\"div\", {\n    className: \"col-12 col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    className: \"contact-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, \"Get In Touch\"), __jsx(\"div\", {\n    className: \"contact-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    name: \"Contact\",\n    method: \"POST\",\n    \"data-netlify\": \"true\",\n    \"netlify-honeypot\": \"bot-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"input-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Name\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }\n  }), errors.name && __jsx(\"span\", {\n    className: \"input-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }\n  }, \"Please provide a name\")), __jsx(\"div\", {\n    className: \"input-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"Email\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }), errors.email && __jsx(\"span\", {\n    className: \"input-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, \"Please provide an email\")), __jsx(\"div\", {\n    className: \"input-validator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, __jsx(\"textarea\", {\n    name: \"message\",\n    id: \"\",\n    cols: \"30\",\n    rows: \"3\",\n    placeholder: \"Message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  })), __jsx(\"button\", {\n    className: \"btn -dark\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"SEND MESSAGE\"))));\n}","map":{"version":3,"sources":["/Users/jonayahj/Desktop/Think Halcyon/Clients/Yego Coffee/YC Website 2.0/ycweb/src/components/Sections/Forms/ContactForm.js"],"names":["useForm","ContactForm","style","register","handleSubmit","watch","errors","onSubmit","data","console","log","required","name","email"],"mappings":";;;AAAA;AACA,SAASA,OAAT,QAAwB,iBAAxB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACvC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA;AAAjC,MAA4CN,OAAO,EAAzD;;AACA,QAAMO,QAAQ,GAAIC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAA3B;;AAEA,SACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEJ,YAAY,CAACG,QAAD,CAA5B;AAAwC,IAAA,IAAI,EAAC,SAA7C;AAAuD,IAAA,MAAM,EAAC,MAA9D;AAAqE,oBAAa,MAAlF;AAAyF,wBAAiB,WAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,MAHhB;AAII,IAAA,GAAG,EAAEJ,QAAQ,CAAC;AAAEQ,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAOCL,MAAM,CAACM,IAAP,IACG;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BARJ,CADJ,EAYI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,WAAW,EAAC,OAHhB;AAII,IAAA,GAAG,EAAET,QAAQ,CAAC;AAAEQ,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAOCL,MAAM,CAACO,KAAP,IACG;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BARJ,CAZJ,EAyBI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACI,IAAA,IAAI,EAAC,SADT;AAEI,IAAA,EAAE,EAAC,EAFP;AAGI,IAAA,IAAI,EAAC,IAHT;AAII,IAAA,IAAI,EAAC,GAJT;AAKI,IAAA,WAAW,EAAC,SALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAzBJ,EAkCI;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlCJ,CADJ,CAFJ,CADJ;AA2CD","sourcesContent":["// Contact Form to go on the Contact page\nimport { useForm } from \"react-hook-form\";\n\nexport default function ContactForm(style) {\n    const { register, handleSubmit, watch, errors } = useForm();\n    const onSubmit = (data) => console.log(data);\n    \n    return (\n        <div className=\"col-12 col-md-6\">\n            <h3 className=\"contact-title\">Get In Touch</h3>\n            <div className=\"contact-form\">\n                <form onSubmit={handleSubmit(onSubmit)} name=\"Contact\" method=\"POST\" data-netlify=\"true\" netlify-honeypot=\"bot-field\">\n                    <div className=\"input-validator\">\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        placeholder=\"Name\"\n                        ref={register({ required: true })}\n                    />\n                    {errors.name && (\n                        <span className=\"input-error\">Please provide a name</span>\n                    )}\n                    </div>\n                    <div className=\"input-validator\">\n                    <input\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"Email\"\n                        ref={register({ required: true })}\n                    />\n                    {errors.email && (\n                        <span className=\"input-error\">\n                        Please provide an email\n                        </span>\n                    )}\n                    </div>\n                    <div className=\"input-validator\">\n                    <textarea\n                        name=\"message\"\n                        id=\"\"\n                        cols=\"30\"\n                        rows=\"3\"\n                        placeholder=\"Message\"\n                    />\n                    </div>\n                    <button className=\"btn -dark\" type=\"submit\">SEND MESSAGE</button>\n                </form>\n            </div>\n        </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}